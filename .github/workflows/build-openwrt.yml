name: Build OpenWrt

on:
  push:
    branches:
      - master
     paths:
    #   - '.config'
       - 'mw4530r.config'
    #   - 'tl-wr720n.config'
  # schedule:
  #   - cron: 0 8 * * 5
  # watch:
  #   types: started
  # release:
  #   types: published

env:
  REPO_URL: https://github.com/openwrt/openwrt
  # REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  # CONFIG_FILE: .config
  DIY_SH: diy.sh
  SSH_ACTIONS: false
  UPLOAD_CONFIG: true
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_UPGRADE_FIRMWARE_ONLY: true
  TZ: Asia/Shanghai

jobs:
  
  build-openwrt-for-mw4530r:

    env:
      BUILD_TARGET: mw4530r
      CONFIG_FILE: mw4530r.config
      UPGRADE_FIRMWARE_FILE: openwrt-ar71xx-generic-mw4530r-v1-squashfs-sysupgrade.bin

    runs-on: ubuntu-latest
    # if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc

    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      if: env.SSH_ACTIONS == 'false'
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        ./scripts/diffconfig.sh > seed.config
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"

    - name: Upload config
      uses: actions/upload-artifact@master
      if: env.SSH_ACTIONS == 'true' && env.UPLOAD_CONFIG == 'true'
      with:
        name: ${{ env.BUILD_TARGET }}.config
        path: openwrt/.config

    - name: Upload seed.config
      uses: actions/upload-artifact@master
      if: env.SSH_ACTIONS == 'true' && env.UPLOAD_CONFIG == 'true'
      with:
        name: ${{ env.BUILD_TARGET }}.seed.config
        path: openwrt/seed.config

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        ls -l
        echo "::set-env name=FIRMWARE::$(pwd)"
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.BUILD_TARGET }}
        path: ${{ env.FIRMWARE }}

    - name: Upload upgrade firmware only
      uses: actions/upload-artifact@master
      if: env.UPLOAD_UPGRADE_FIRMWARE_ONLY == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.BUILD_TARGET }}
        path: ${{ env.FIRMWARE }}/${{ env.UPGRADE_FIRMWARE_FILE }}

  build-openwrt-for-tl-wr720n:

    env:
      BUILD_TARGET: tl-wr720n
      CONFIG_FILE: tl-wr720n.config
      UPGRADE_FIRMWARE_FILE: openwrt-ar71xx-tiny-tl-wr720n-v3-squashfs-sysupgrade.bin

    runs-on: ubuntu-latest
    # if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc

    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      if: env.SSH_ACTIONS == 'false'
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        ./scripts/diffconfig.sh > seed.config
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"

    - name: Upload config
      uses: actions/upload-artifact@master
      if: env.SSH_ACTIONS == 'true' && env.UPLOAD_CONFIG == 'true'
      with:
        name: ${{ env.BUILD_TARGET }}.config
        path: openwrt/.config

    - name: Upload seed.config
      uses: actions/upload-artifact@master
      if: env.SSH_ACTIONS == 'true' && env.UPLOAD_CONFIG == 'true'
      with:
        name: ${{ env.BUILD_TARGET }}.seed.config
        path: openwrt/seed.config

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        ls -l
        echo "::set-env name=FIRMWARE::$(pwd)"
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.BUILD_TARGET }}
        path: ${{ env.FIRMWARE }}

    - name: Upload upgrade firmware only
      uses: actions/upload-artifact@master
      if: env.UPLOAD_UPGRADE_FIRMWARE_ONLY == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.BUILD_TARGET }}
        path: ${{ env.FIRMWARE }}/${{ env.UPGRADE_FIRMWARE_FILE }}
